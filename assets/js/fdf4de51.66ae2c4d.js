"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[511],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5536:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:1},s="React Native Background Timer",u={unversionedId:"tutorial-basics/backgroundTimer",id:"tutorial-basics/backgroundTimer",isDocsHomePage:!1,title:"React Native Background Timer",description:"1. Install React Native Background Timer from GitHub :",source:"@site/docs/tutorial-basics/backgroundTimer.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/backgroundTimer",permalink:"/docs/tutorial-basics/backgroundTimer",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Kevin's Documents",permalink:"/docs/intro"},next:{title:"Get Data from JSON Server using Fetch",permalink:"/docs/tutorial-basics/get-data-fetch"}},l=[{value:"Usage",id:"usage",children:[],level:3}],m={toc:l};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"react-native-background-timer"},"React Native Background Timer"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install React Native Background Timer from GitHub :")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/ocetnik/react-native-background-timer"},"https://github.com/ocetnik/react-native-background-timer")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-background-timer\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Pod Install :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx pod-install\n")),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="timer.js"',title:'"timer.js"'},'import React, { useEffect, useState } from "react";\nimport { View, StyleSheet, Text } from "react-native";\nimport BackgroundTimer from "react-native-background-timer";\nimport { Button } from "react-native-paper";\nimport TrackPlayer from "react-native-track-player";\n\nconst Timer = () => {\n  const [secondsLeft, setSecondsLeft] = React.useState(600);\n  const [timerOn, setTimerOn] = React.useState(false);\n\n  useEffect(() => {\n    if (timerOn) startTimer();\n    else BackgroundTimer.stopBackgroundTimer();\n\n    return () => {\n      BackgroundTimer.stopBackgroundTimer();\n    };\n  }, [timerOn]);\n\n  useEffect(() => {\n    if (secondsLeft === 0) {\n      BackgroundTimer.stopBackgroundTimer();\n      TrackPlayer.pause();\n      setTimerOn(false);\n      resetTimer();\n    }\n  }, [secondsLeft]);\n\n  const startTimer = () => {\n    BackgroundTimer.runBackgroundTimer(() => {\n      setSecondsLeft((secs) => {\n        if (secs > 0) return secs - 1;\n        else return 0;\n      });\n    }, 1000);\n  };\n\n  const resetTimer = () => {\n    setSecondsLeft(30);\n    setTimerOn(false);\n  };\n\n  const clockify = () => {\n    let hours = Math.floor(secondsLeft / 60 / 60);\n    let mins = Math.floor((secondsLeft / 60) % 60);\n    let seconds = Math.floor(secondsLeft % 60);\n\n    let displayHours = hours < 10 ? `0${hours}` : hours;\n    let displayMins = mins < 10 ? `0${mins}` : mins;\n    let displaySecs = seconds < 10 ? `0${seconds}` : seconds;\n\n    return `${displayHours}:${displayMins}:${displaySecs}`;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 24, color: "black" }}>{clockify()}</Text>\n      <Button\n        mode="contained"\n        onPress={() => setTimerOn((current) => !current)}\n      >\n        {timerOn ? "Stop" : "Start"}\n      </Button>\n      <Button\n        mode="contained"\n        onPress={() => {\n          setSecondsLeft(10);\n          setTimerOn((current) => !current);\n        }}\n      >\n        15 Min\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 30,\n    alignItems: "center",\n  },\n});\n\nexport default Timer;\n')))}p.isMDXComponent=!0}}]);